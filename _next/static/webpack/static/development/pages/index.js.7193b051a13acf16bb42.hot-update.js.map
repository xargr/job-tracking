{"version":3,"file":"static/webpack/static/development/pages/index.js.7193b051a13acf16bb42.hot-update.js","sources":["webpack:///./components/ModalForm.js"],"sourcesContent":["import React, {\n  useContext,\n  useState,\n  useEffect,\n  useRef,\n  useCallback\n} from 'react';\nimport styled from 'styled-components';\nimport isModalValid from '../lib/isModalValid';\nimport { JobContext } from './context/JobContext';\n\nconst Overlay = styled.div`\n  background-color: rgba(51, 41, 41, 0.65);\n  position: fixed;\n  min-height: 100vh;\n  min-width: 100vw;\n  z-index: 10;\n  top: 0;\n  left: 0;\n`;\nconst Container = styled.div`\n  width: 360px;\n  height: auto;\n  position: absolute;\n  background: #fff;\n  top: calc(50% - 160px);\n  left: calc(50% - 180px);\n  border-radius: 5px;\n  padding: 1em;\n`;\n\nconst Close = styled.div`\n  margin: 10px 0;\n  text-align: right;\n  font-size: 1.5em;\n  height: 30px;\n  width: 100%;\n  float: right;\n  line-height: 30px;\n  font-weight: 700;\n`;\n\nconst Pointer = styled.div`\n  width: 30px;\n  height: 30px;\n  float: right;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst H4 = styled.h4`\n  font-weight: 700;\n  font-size: 1.2em;\n  font-family: sans-serif;\n  margin: 0px 0px 20px 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-family: 'Red Hat Text', sans-serif;\n  color: rgb(152, 161, 179);\n  margin: 0px 0px 10px 15px;\n`;\n\nconst Input = styled.input`\n  display: block;\n  height: 30px;\n  width: 90%;\n  margin: 0 auto 10px;\n  border: none;\n  background-color: rgb(242, 245, 250);\n  border-radius: 0px;\n\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid rgb(33, 150, 243);\n  }\n`;\n\nconst Button = styled.button`\n  margin: 20px;\n  float: right;\n  width: 75px;\n  height: 35px;\n  cursor: pointer;\n  background-color: rgb(22, 138, 230);\n  outline: none;\n  border: 1px solid rgb(22, 138, 230);\n  border-radius: 2px;\n  color: #fff;\n  font-weight: 700;\n  font-size: 1em;\n`;\n\nconst ModalForm = () => {\n  const { modalData, modalTrigger, modalSubmit } = useContext(JobContext);\n\n  const [state, setState] = useState({\n    ...modalData\n  });\n\n  const [isValid, setIsValid] = useState(false);\n\n  const node = useRef();\n\n  const handleClick = useCallback(e => {\n    if (node.current && !node.current.contains(e.target)) {\n      modalTrigger(null);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  const handleForm = e => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    });\n\n    isModalValid(state, setIsValid);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    modalSubmit(state);\n  };\n\n  return (\n    <Overlay>\n      <Container ref={node}>\n        <Close>\n          <Pointer onClick={() => modalTrigger(null)}>&#9747;</Pointer>\n        </Close>\n        <H4>Add Job</H4>\n        <Label htmlFor=\"company\">Company</Label>\n        <Input\n          name=\"company\"\n          value={state.company}\n          autoComplete=\"off\"\n          onChange={e => handleForm(e)}\n        />\n        <Label htmlFor=\"position\">Position</Label>\n        <Input\n          name=\"position\"\n          value={state.position}\n          autoComplete=\"off\"\n          onChange={e => handleForm(e)}\n        />\n        <Button disabled={!isValid} onClick={e => handleSubmit(e)}>\n          Save\n        </Button>\n        <Button disabled={!isValid} onClick={e => handleSubmit(e)}>\n          Save\n        </Button>\n      </Container>\n    </Overlay>\n  );\n};\n\nexport default ModalForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}