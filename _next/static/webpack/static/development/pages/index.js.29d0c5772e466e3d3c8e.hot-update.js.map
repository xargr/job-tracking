{"version":3,"file":"static/webpack/static/development/pages/index.js.29d0c5772e466e3d3c8e.hot-update.js","sources":["webpack:///./components/ModalForm.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  background-color: rgba(51, 41, 41, 0.65);\n  position: fixed;\n  min-height: 100vh;\n  min-width: 100vw;\n  z-index: 10;\n  top: 0;\n  left: 0;\n`;\nconst Container = styled.div`\n  width: 360px;\n  height: auto;\n  position: absolute;\n  background: #fff;\n  top: calc(50% - 160px);\n  left: calc(50% - 150px);\n  border-radius: 5px;\n  padding: 1em;\n`;\n\nconst Close = styled.div`\n  margin: 10px 0;\n  text-align: right;\n  font-size: 1.5em;\n  height: 30px;\n  width: 100%;\n  float: right;\n  line-height: 30px;\n  font-weight: 700;\n`;\n\nconst Pointer = styled.div`\n  width: 30px;\n  height: 30px;\n  float: right;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst H4 = styled.h4`\n  font-weight: 700;\n  font-size: 1.2em;\n  font-family: sans-serif;\n  margin: 0px 0px 20px 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-family: 'Red Hat Text', sans-serif;\n  color: rgb(152, 161, 179);\n  margin: 0px 0px 10px 15px;\n`;\n\nconst Input = styled.input`\n  display: block;\n  height: 30px;\n  width: 90%;\n  margin: 0 auto 10px;\n  border: none;\n  background-color: rgb(242, 245, 250);\n  border-radius: 0px;\n\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid rgb(33, 150, 243);\n  }\n`;\n\nconst Button = styled.button`\n  display: block;\n`;\n\nconst ModalForm = ({ modalTrigger, isModalOpen }) => {\n  const node = useRef();\n\n  const handleClick = useCallback(e => {\n    if (isModalOpen && node.current && !node.current.contains(e.target)) {\n      modalTrigger(null);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  return (\n    <Overlay>\n      <Container ref={node}>\n        <Close>\n          <Pointer onClick={() => modalTrigger(null)}>&#9747;</Pointer>\n        </Close>\n        <H4>Add Job</H4>\n        <Label htmlFor=\"company\">Company</Label>\n        <Input name=\"company\" autoComplete=\"off\" />\n        <Label htmlFor=\"position\">Position</Label>\n        <Input name=\"position\" autoComplete=\"off\" />\n        <Button>Save</Button>\n      </Container>\n    </Overlay>\n  );\n};\n\nexport default ModalForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AASA;AAWA;AAWA;AAQA;AAOA;AAQA;AAeA;AACA;AAGA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}