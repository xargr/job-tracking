{"version":3,"file":"static/webpack/static/development/pages/_app.js.82abc1d82c4ac66ba389.hot-update.js","sources":["webpack:///./components/context/JobContext.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport data from '../../lib/data';\nimport dragAndDrop from '../../lib/dragAndDrop';\n\nconst JobContext = React.createContext();\n\nconst JobContextProvider = ({ children }) => {\n  const [state, setState] = useState();\n\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      const initialState = JSON.parse(localStorage.getItem('data')) || data;\n      setState(initialState);\n    } else {\n      localStorage.setItem('data', JSON.stringify(state));\n    }\n  });\n\n  const onDragEnd = result => dragAndDrop();\n\n  const modalTrigger = id => {\n    console.log(id);\n    setState({ ...state, isModalOpen: !state.isModalOpen });\n  };\n\n  return (\n    <JobContext.Provider value={{ ...state, onDragEnd, modalTrigger }}>\n      {children}\n    </JobContext.Provider>\n  );\n};\n\nexport default JobContextProvider;\nexport { JobContext };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;A","sourceRoot":""}