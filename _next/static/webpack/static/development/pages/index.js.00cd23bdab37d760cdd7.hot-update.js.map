{"version":3,"file":"static/webpack/static/development/pages/index.js.00cd23bdab37d760cdd7.hot-update.js","sources":["webpack:///./components/ModalForm.js"],"sourcesContent":["import React, {\n  useContext,\n  useState,\n  useEffect,\n  useRef,\n  useCallback\n} from 'react';\nimport isModalValid from '../lib/isModalValid';\nimport { JobContext } from './context/JobContext';\n\n\n\nconst ModalForm = () => {\n  const { modalData, modalTrigger, modalSubmit, deleteSubmit } = useContext(\n    JobContext\n  );\n\n  const [state, setState] = useState({\n    ...modalData\n  });\n\n  const [isValid, setIsValid] = useState(false);\n\n  const node = useRef();\n\n  const handleClick = useCallback(e => {\n    if (node.current && !node.current.contains(e.target)) {\n      modalTrigger(null);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  const handleForm = e => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    });\n\n    isModalValid(state, setIsValid);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    modalSubmit(state);\n  };\n\n  const handleDelete = (e, jobId, columnId) => {\n    e.preventDefault();\n    deleteSubmit(jobId, columnId);\n  };\n\n  return (\n    <Overlay>\n      <Container ref={node}>\n        <Close>\n          <Pointer onClick={() => modalTrigger(null)}>&#9747;</Pointer>\n        </Close>\n        {state.jobId ? <H4>Update Job</H4> : <H4>Add Job</H4>}\n        <Label htmlFor=\"company\">Company</Label>\n        <Input\n          name=\"company\"\n          value={state.company}\n          autoComplete=\"off\"\n          onChange={e => handleForm(e)}\n        />\n        <Label htmlFor=\"position\">Position</Label>\n        <Input\n          name=\"position\"\n          value={state.position}\n          autoComplete=\"off\"\n          onChange={e => handleForm(e)}\n        />\n        {state.jobId ? (\n          <ButtonSave disabled={!isValid} onClick={e => handleSubmit(e)}>\n            Update\n          </ButtonSave>\n        ) : (\n          <ButtonSave disabled={!isValid} onClick={e => handleSubmit(e)}>\n            Save\n          </ButtonSave>\n        )}\n\n        {state.jobId && (\n          <ButtonDelete\n            onClick={e => handleDelete(e, state.jobId, state.columnId)}\n          >\n            Delete\n          </ButtonDelete>\n        )}\n      </Container>\n    </Overlay>\n  );\n};\n\nexport default ModalForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}