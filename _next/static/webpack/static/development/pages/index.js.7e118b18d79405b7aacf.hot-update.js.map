{"version":3,"file":"static/webpack/static/development/pages/index.js.7e118b18d79405b7aacf.hot-update.js","sources":["webpack:///./components/JobsPanel/JobsPanel.js"],"sourcesContent":["import React from 'react';\nimport FeatureList from './FeatureList';\nimport ModalForm from '../ModalForm';\n\nclass JobsPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      column: 'wishlist',\n      data: {},\n      modalItem: { company: '', position: '' },\n      modalIndex: null\n    };\n    this.columns = ['wishlist', 'applied', 'interview', 'offer', 'rejected'];\n  }\n\n  componentDidMount() {\n    this.loadLocalStorage();\n\n    window.addEventListener('click', event => {\n      if (this.state.isOpen) {\n        // create dom element\n        const elem = document.createElement('div');\n        const div = elem.setAttribute('class', 'overlay');\n\n        // compare created dom element and element that clicked on\n        const isOuterClick = elem.isEqualNode(event.target);\n\n        // if is equal set state to close modal\n        if (isOuterClick) {\n          this.setState({\n            isOpen: !this.state.isOpen\n          });\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', () => {});\n  }\n\n  loadLocalStorage = () => {\n    const localData = JSON.parse(localStorage.getItem('data'));\n\n    if (localData) {\n      this.setState({ data: localData });\n    }\n  };\n\n  clickAddJob = column => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      column\n    });\n  };\n\n  handleModalData = data => {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen\n      },\n      () => {\n        this.saveDataToLocalStorage(data);\n      }\n    );\n  };\n\n  saveDataToLocalStorage = data => {\n    if (window) {\n      const { column } = this.state;\n\n      const oldStorage = JSON.parse(localStorage.getItem('data'));\n\n      if (oldStorage && oldStorage[column]) {\n        const obj = oldStorage;\n        obj[column] = [...oldStorage[column], data];\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      } else if (oldStorage && !oldStorage[column]) {\n        const obj = Object.assign(oldStorage, { [column]: [data] });\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      } else {\n        const obj = {};\n        obj[column] = [data];\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      }\n    }\n  };\n\n  openModal = (column, item, index) => {\n    this.setState(\n      {\n        modalItem: { company: item.company, position: item.position },\n        modalIndex: index\n      },\n      () => {\n        this.clickAddJob(column);\n      }\n    );\n  };\n\n  render() {\n    const {\n      isOpen,\n      data,\n      modalItem,\n\n    } = this.state;\n\n    return (\n      <>\n        {this.columns.map(comp => (\n          <FeatureList\n            key={comp}\n            data={data[comp]}\n            title={comp}\n            clickAddJob={this.clickAddJob}\n            openModal={this.openModal}\n          />\n        ))}\n        {isOpen && (\n          <ModalForm\n            item={modalItem}\n            index={index}\n            handleData={this.handleModalData}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default JobsPanel;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuCA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA7CA;AA+CA;AACA;AACA;AAFA;AAIA;AACA;AApDA;AAsDA;AAEA;AADA;AAIA;AACA;AAEA;AACA;AA/DA;AAiEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAvFA;AAyFA;AAEA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAjGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAOA;AATA;AAUA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAgEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAQA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAjIA;AACA;AAmIA;;;;A","sourceRoot":""}