{"version":3,"file":"static/webpack/static/development/pages/_app.js.d4a9772b0c461f30d77e.hot-update.js","sources":["webpack:///./components/context/JobContext.js","webpack:///./lib/data.js","webpack:///./lib/dragAndDrop.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v4.js","webpack:///./pages/_app.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport data from '../../lib/data';\nimport dragAndDrop from '../../lib/dragAndDrop';\n\nconst JobContext = React.createContext();\n\nconst JobContextProvider = ({ children }) => {\n  const [state, setState] = useState();\n\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      const initialState = JSON.parse(localStorage.getItem('data')) || data;\n      setState(initialState);\n    } else {\n      localStorage.setItem('data', JSON.stringify(state));\n    }\n  });\n\n  const onDragEnd = result => dragAndDrop(result, state, setState);\n\n  const modalTrigger = data => {\n    setState({\n      ...state,\n      isModalOpen: !state.isModalOpen,\n      modalData: {\n        ...state.modalData,\n        columnId: data\n      }\n    });\n  };\n\n  const modalSubmit = modalValues => {\n    const { company, position } = modalValues;\n\n    const uniqId = uuidv4();\n\n    const newJob = {\n      id: uniqId,\n      company,\n      position,\n      date: Date.now()\n    };\n\n    const newJobs = {\n      ...state.jobs,\n      [uniqId]: newJob\n    };\n\n    const selectedColumnId = state.modalData.columnId;\n    const selectedColumn = state.columns[selectedColumnId];\n\n    const newColumns = {\n      ...state.columns,\n      [selectedColumnId]: {\n        ...selectedColumn,\n        jobs: [...selectedColumn.jobs, uniqId]\n      }\n    };\n\n    console.log(newColumns);\n  };\n\n  return (\n    <JobContext.Provider\n      value={{ ...state, onDragEnd, modalTrigger, modalSubmit }}\n    >\n      {children}\n    </JobContext.Provider>\n  );\n};\n\nexport default JobContextProvider;\nexport { JobContext };\n","const data = {\n  jobs: {\n    'job-1': {\n      id: 'job-1',\n      company: 'Google',\n      position: 'Senior Front-end',\n      date: 1566681661474\n    },\n    'job-2': {\n      id: 'job-2',\n      company: 'Aple',\n      position: 'Medium Front-end',\n      date: 1566681661474\n    },\n    'job-3': {\n      id: 'job-3',\n      company: 'Samsung',\n      position: 'Lead Front-end',\n      date: 1566681661474\n    },\n    'job-4': {\n      id: 'job-4',\n      company: 'Twitter',\n      position: 'Lead Front-end',\n      date: 1566681661474\n    },\n    'job-5': {\n      id: 'job-5',\n      company: 'UBS',\n      position: 'Lead Front-end',\n      date: 1566681661474\n    }\n  },\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'Wishlist',\n      jobs: ['job-1', 'job-3', 'job-5']\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'Applied',\n      jobs: ['job-2', 'job-4']\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'Interview',\n      jobs: []\n    },\n    'column-4': {\n      id: 'column-4',\n      title: 'Offer',\n      jobs: []\n    },\n    'column-5': {\n      id: 'column-5',\n      title: 'Rejected',\n      jobs: []\n    }\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3', 'column-4', 'column-5'],\n  isModalOpen: false,\n  modalData: {\n    columnId: null,\n    company: '',\n    position: ''\n  }\n};\n\nexport default data;\n","export default (result, state, setState) => {\n  const { destination, source, draggableId } = result;\n\n  if (!destination) {\n    return;\n  }\n\n  if (\n    destination.droppableId === source.droppableId &&\n    destination.index === source.index\n  ) {\n    return;\n  }\n\n  const start = state.columns[source.droppableId];\n  const finish = state.columns[destination.droppableId];\n\n  if (start === finish) {\n    const newJobIds = Array.from(start.jobs);\n\n    newJobIds.splice(source.index, 1);\n    newJobIds.splice(destination.index, 0, draggableId);\n\n    const newColumn = {\n      ...start,\n      jobs: newJobIds\n    };\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newColumn.id]: newColumn\n      }\n    };\n\n    setState(newState);\n    return;\n  }\n\n  const startJobIds = Array.from(start.jobs);\n  startJobIds.splice(source.index, 1);\n\n  const newStart = {\n    ...start,\n    jobs: startJobIds\n  };\n\n  const finishJobIds = Array.from(finish.jobs);\n  finishJobIds.splice(destination.index, 0, draggableId);\n\n  const newFinish = {\n    ...finish,\n    jobs: finishJobIds\n  };\n\n  const newState = {\n    ...state,\n    columns: {\n      ...state.columns,\n      [newStart.id]: newStart,\n      [newFinish.id]: newFinish\n    }\n  };\n\n  setState(newState);\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import App from 'next/app';\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Page from '../components/Page';\nimport JobContextProvider from '../components/context/JobContext';\n\nconst theme = {\n  colors: {\n    blue: '#2696f3',\n    bg: '#f2f5fa'\n  }\n};\n\nexport default class MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <JobContextProvider>\n        <Page>\n          <Component {...pageProps} />\n        </Page>\n      </JobContextProvider>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAFA;AAHA;AAQA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAIA;AACA;AACA;AACA;AAIA;AAJA;AACA;AAOA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;AC3EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAzBA;AAgCA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AArBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AAHA;AA9DA;AAqEA;;;;;;;;;;;;;;;;;;;;ACrEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAIA;AAEA;AAFA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAIA;AAEA;AAFA;AACA;AAQA;AACA;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AADA;AACA;AAMA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAVA;AACA;;;;;A","sourceRoot":""}