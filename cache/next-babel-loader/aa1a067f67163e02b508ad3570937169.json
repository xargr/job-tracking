{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport FeatureList from './FeatureList';\nimport ModalForm from '../ModalForm';\n\nvar JobsPanel =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(JobsPanel, _React$PureComponent);\n\n  function JobsPanel(props) {\n    var _this;\n\n    _classCallCheck(this, JobsPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JobsPanel).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"loadLocalStorage\", function () {\n      var localData = JSON.parse(localStorage.getItem('data'));\n\n      if (localData) {\n        _this.setState({\n          data: localData\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clickAddJob\", function (column) {\n      _this.setState({\n        isOpen: !_this.state.isOpen,\n        column: column\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleModalData\", function (data) {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      }, function () {\n        _this.saveDataToLocalStorage(data);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveDataToLocalStorage\", function (data) {\n      if (window) {\n        var column = _this.state.column;\n        var oldStorage = JSON.parse(localStorage.getItem('data'));\n\n        if (oldStorage && oldStorage[column]) {\n          var obj = oldStorage;\n          obj[column] = [].concat(_toConsumableArray(oldStorage[column]), [data]);\n          localStorage.setItem('data', _JSON$stringify(obj));\n\n          _this.loadLocalStorage();\n        } else if (oldStorage && !oldStorage[column]) {\n          var _obj = _Object$assign(oldStorage, _defineProperty({}, column, [data]));\n\n          localStorage.setItem('data', _JSON$stringify(_obj));\n\n          _this.loadLocalStorage();\n        } else {\n          var _obj2 = {};\n          _obj2[column] = [data];\n          localStorage.setItem('data', _JSON$stringify(_obj2));\n\n          _this.loadLocalStorage();\n        }\n      }\n    });\n\n    _this.state = {\n      isOpen: false,\n      column: 'wishlist',\n      data: {}\n    };\n    _this.columns = ['wishlist', 'applied', 'interview', 'offer', 'rejected'];\n    return _this;\n  }\n\n  _createClass(JobsPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadLocalStorage();\n      window.addEventListener('click', function (event) {\n        if (_this2.state.isOpen) {\n          // create dom element\n          var elem = document.createElement('div');\n          var div = elem.setAttribute('class', 'overlay'); // compare created dom element and element that clicked on\n\n          var isOuterClick = elem.isEqualNode(event.target); // if is equal set state to close modal\n\n          if (isOuterClick) {\n            _this2.setState({\n              isOpen: !_this2.state.isOpen\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('click', function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          isOpen = _this$state.isOpen,\n          data = _this$state.data;\n      return React.createElement(React.Fragment, null, this.columns.map(function (comp) {\n        return React.createElement(FeatureList, {\n          key: comp,\n          data: data[comp],\n          title: comp,\n          clickAddJob: _this3.clickAddJob\n        });\n      }), isOpen && React.createElement(ModalForm, {\n        handleData: this.handleModalData\n      }));\n    }\n  }]);\n\n  return JobsPanel;\n}(React.PureComponent);\n\nexport default JobsPanel;","map":null,"metadata":{},"sourceType":"module"}