{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/greg/sites/jobTracking/components/JobsPanel/JobsPanel.js\";\nimport React from 'react';\nimport FeatureList from './FeatureList';\nimport ModalForm from '../ModalForm';\n\nclass JobsPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadLocalStorage\", () => {\n      const localData = JSON.parse(localStorage.getItem('data'));\n\n      if (localData) {\n        this.setState({\n          data: localData\n        });\n      }\n    });\n\n    _defineProperty(this, \"clickAddJob\", column => {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        column\n      });\n    });\n\n    _defineProperty(this, \"handleModalData\", data => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      }, () => {\n        this.saveDataToLocalStorage(data);\n      });\n    });\n\n    _defineProperty(this, \"saveDataToLocalStorage\", data => {\n      if (window) {\n        const {\n          column\n        } = this.state;\n        const oldStorage = JSON.parse(localStorage.getItem('data'));\n\n        if (oldStorage && oldStorage[column]) {\n          const obj = oldStorage;\n          obj[column] = [...oldStorage[column], data];\n          localStorage.setItem('data', _JSON$stringify(obj));\n          this.loadLocalStorage();\n        } else if (oldStorage && !oldStorage[column]) {\n          const obj = _Object$assign(oldStorage, {\n            [column]: [data]\n          });\n\n          localStorage.setItem('data', _JSON$stringify(obj));\n          this.loadLocalStorage();\n        } else {\n          const obj = {};\n          obj[column] = [data];\n          localStorage.setItem('data', _JSON$stringify(obj));\n          this.loadLocalStorage();\n        }\n      }\n    });\n\n    this.state = {\n      isOpen: false,\n      column: 'wishlist',\n      data: {}\n    };\n    this.columns = ['wishlist', 'applied', 'interview', 'offer', 'rejected'];\n  }\n\n  componentDidMount() {\n    this.loadLocalStorage();\n    window.addEventListener('click', event => {\n      if (this.state.isOpen) {\n        // create dom element\n        const elem = document.createElement('div');\n        const div = elem.setAttribute('class', 'overlay'); // compare created dom element and element that clicked on\n\n        const isOuterClick = elem.isEqualNode(event.target); // if is equal set state to close modal\n\n        if (isOuterClick) {\n          this.setState({\n            isOpen: !this.state.isOpen\n          });\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', () => {});\n  }\n\n  render() {\n    const {\n      isOpen,\n      data\n    } = this.state;\n    return React.createElement(React.Fragment, null, this.columns.map(comp => React.createElement(FeatureList, {\n      key: comp,\n      data: data[comp],\n      title: comp,\n      clickAddJob: this.clickAddJob,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), isOpen && React.createElement(ModalForm, {\n      handleData: this.handleModalData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default JobsPanel;","map":{"version":3,"sources":["/home/greg/sites/jobTracking/components/JobsPanel/JobsPanel.js"],"names":["React","FeatureList","ModalForm","JobsPanel","PureComponent","constructor","props","localData","JSON","parse","localStorage","getItem","setState","data","column","isOpen","state","saveDataToLocalStorage","window","oldStorage","obj","setItem","loadLocalStorage","columns","componentDidMount","addEventListener","event","elem","document","createElement","div","setAttribute","isOuterClick","isEqualNode","target","componentWillUnmount","removeEventListener","render","map","comp","clickAddJob","handleModalData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FeatureList from './FeatureList';\nimport ModalForm from '../ModalForm';\n\nclass JobsPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      column: 'wishlist',\n      data: {}\n    };\n    this.columns = ['wishlist', 'applied', 'interview', 'offer', 'rejected'];\n  }\n\n  componentDidMount() {\n    this.loadLocalStorage();\n\n    window.addEventListener('click', event => {\n      if (this.state.isOpen) {\n        // create dom element\n        const elem = document.createElement('div');\n        const div = elem.setAttribute('class', 'overlay');\n\n        // compare created dom element and element that clicked on\n        const isOuterClick = elem.isEqualNode(event.target);\n\n        // if is equal set state to close modal\n        if (isOuterClick) {\n          this.setState({\n            isOpen: !this.state.isOpen\n          });\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', () => {});\n  }\n\n  loadLocalStorage = () => {\n    const localData = JSON.parse(localStorage.getItem('data'));\n\n    if (localData) {\n      this.setState({ data: localData });\n    }\n  };\n\n  clickAddJob = column => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      column\n    });\n  };\n\n  handleModalData = data => {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen\n      },\n      () => {\n        this.saveDataToLocalStorage(data);\n      }\n    );\n  };\n\n  saveDataToLocalStorage = data => {\n    if (window) {\n      const { column } = this.state;\n\n      const oldStorage = JSON.parse(localStorage.getItem('data'));\n\n      if (oldStorage && oldStorage[column]) {\n        const obj = oldStorage;\n        obj[column] = [...oldStorage[column], data];\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      } else if (oldStorage && !oldStorage[column]) {\n        const obj = Object.assign(oldStorage, { [column]: [data] });\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      } else {\n        const obj = {};\n        obj[column] = [data];\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      }\n    }\n  };\n\n  render() {\n    const { isOpen, data } = this.state;\n\n    return (\n      <>\n        {this.columns.map(comp => (\n          <FeatureList\n            key={comp}\n            data={data[comp]}\n            title={comp}\n            clickAddJob={this.clickAddJob}\n          />\n        ))}\n        {isOpen && <ModalForm handleData={this.handleModalData} />}\n      </>\n    );\n  }\n}\n\nexport default JobsPanel;\n"]},"metadata":{},"sourceType":"module"}