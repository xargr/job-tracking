{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/greg/sites/jobTracking/components/JobsPanel/JobsPanel.js\";\nimport React from 'react';\nimport FeatureList from './FeatureList';\nimport ModalForm from '../ModalForm';\n\nvar JobsPanel =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(JobsPanel, _React$PureComponent);\n\n  function JobsPanel(props) {\n    var _this;\n\n    _classCallCheck(this, JobsPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JobsPanel).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"loadLocalStorage\", function () {\n      var localData = JSON.parse(localStorage.getItem('data'));\n\n      if (localData) {\n        _this.setState({\n          data: localData\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clickAddJob\", function (column) {\n      _this.setState({\n        isOpen: !_this.state.isOpen,\n        column: column\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleModalData\", function (data) {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      }, function () {\n        _this.saveDataToLocalStorage(data);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveDataToLocalStorage\", function (data) {\n      if (window) {\n        var column = _this.state.column;\n        var oldStorage = JSON.parse(localStorage.getItem('data'));\n\n        if (oldStorage && oldStorage[column]) {\n          var obj = oldStorage;\n          obj[column] = [].concat(_toConsumableArray(oldStorage[column]), [data]);\n          localStorage.setItem('data', _JSON$stringify(obj));\n\n          _this.loadLocalStorage();\n        } else if (oldStorage && !oldStorage[column]) {\n          var _obj = _Object$assign(oldStorage, _defineProperty({}, column, [data]));\n\n          localStorage.setItem('data', _JSON$stringify(_obj));\n\n          _this.loadLocalStorage();\n        } else {\n          var _obj2 = {};\n          _obj2[column] = [data];\n          localStorage.setItem('data', _JSON$stringify(_obj2));\n\n          _this.loadLocalStorage();\n        }\n      }\n    });\n\n    _this.state = {\n      isOpen: false,\n      column: 'wishlist',\n      data: {}\n    };\n    _this.columns = ['wishlist', 'applied', 'interview', 'offer', 'rejected'];\n    return _this;\n  }\n\n  _createClass(JobsPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadLocalStorage();\n      window.addEventListener('click', function (event) {\n        if (_this2.state.isOpen) {\n          // create dom element\n          var elem = document.createElement('div');\n          var div = elem.setAttribute('class', 'overlay'); // compare created dom element and element that clicked on\n\n          var isOuterClick = elem.isEqualNode(event.target); // if is equal set state to close modal\n\n          if (isOuterClick) {\n            _this2.setState({\n              isOpen: !_this2.state.isOpen\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('click', function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          isOpen = _this$state.isOpen,\n          data = _this$state.data;\n      return React.createElement(React.Fragment, null, this.columns.map(function (comp) {\n        return React.createElement(FeatureList, {\n          key: comp,\n          data: data[comp],\n          title: comp,\n          clickAddJob: _this3.clickAddJob,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n      }), isOpen && React.createElement(ModalForm, {\n        handleData: this.handleModalData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return JobsPanel;\n}(React.PureComponent);\n\nexport default JobsPanel;","map":{"version":3,"sources":["/home/greg/sites/jobTracking/components/JobsPanel/JobsPanel.js"],"names":["React","FeatureList","ModalForm","JobsPanel","props","localData","JSON","parse","localStorage","getItem","setState","data","column","isOpen","state","saveDataToLocalStorage","window","oldStorage","obj","setItem","loadLocalStorage","columns","addEventListener","event","elem","document","createElement","div","setAttribute","isOuterClick","isEqualNode","target","removeEventListener","map","comp","clickAddJob","handleModalData","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FeatureList from './FeatureList';\nimport ModalForm from '../ModalForm';\n\nclass JobsPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      column: 'wishlist',\n      data: {}\n    };\n    this.columns = ['wishlist', 'applied', 'interview', 'offer', 'rejected'];\n  }\n\n  componentDidMount() {\n    this.loadLocalStorage();\n\n    window.addEventListener('click', event => {\n      if (this.state.isOpen) {\n        // create dom element\n        const elem = document.createElement('div');\n        const div = elem.setAttribute('class', 'overlay');\n\n        // compare created dom element and element that clicked on\n        const isOuterClick = elem.isEqualNode(event.target);\n\n        // if is equal set state to close modal\n        if (isOuterClick) {\n          this.setState({\n            isOpen: !this.state.isOpen\n          });\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', () => {});\n  }\n\n  loadLocalStorage = () => {\n    const localData = JSON.parse(localStorage.getItem('data'));\n\n    if (localData) {\n      this.setState({ data: localData });\n    }\n  };\n\n  clickAddJob = column => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      column\n    });\n  };\n\n  handleModalData = data => {\n    this.setState(\n      {\n        isOpen: !this.state.isOpen\n      },\n      () => {\n        this.saveDataToLocalStorage(data);\n      }\n    );\n  };\n\n  saveDataToLocalStorage = data => {\n    if (window) {\n      const { column } = this.state;\n\n      const oldStorage = JSON.parse(localStorage.getItem('data'));\n\n      if (oldStorage && oldStorage[column]) {\n        const obj = oldStorage;\n        obj[column] = [...oldStorage[column], data];\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      } else if (oldStorage && !oldStorage[column]) {\n        const obj = Object.assign(oldStorage, { [column]: [data] });\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      } else {\n        const obj = {};\n        obj[column] = [data];\n        localStorage.setItem('data', JSON.stringify(obj));\n        this.loadLocalStorage();\n      }\n    }\n  };\n\n  render() {\n    const { isOpen, data } = this.state;\n\n    return (\n      <>\n        {this.columns.map(comp => (\n          <FeatureList\n            key={comp}\n            data={data[comp]}\n            title={comp}\n            clickAddJob={this.clickAddJob}\n          />\n        ))}\n        {isOpen && <ModalForm handleData={this.handleModalData} />}\n      </>\n    );\n  }\n}\n\nexport default JobsPanel;\n"]},"metadata":{},"sourceType":"module"}